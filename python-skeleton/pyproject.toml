# pyproject.toml
[tool.poetry]
name = "app"
version = "0.1.0"
description = "VRO Project Skeleton"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "app", from = "src"}]
package-mode = false

[tool.poetry.dependencies]
python = ">=3.10"
fastapi = "^0.115.11"
httpx = "^0.28.1"
uvicorn = {version = "^0.34.0", extras = ["standard"]}

[tool.poetry.group.dev.dependencies]
mypy = "^1.15.0"
pre-commit = "^4.2.0"
ruff = "^0.11.2"
pytest = "^8.3.5"
pytest-cov = "^6.0.0"
bandit = {version = "^1.8.3", extras = ["toml"]}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "6.0"

# Additional Options
# Comment line below, and uncomment the line below that to be able to debug pytests
addopts = "-ra --import-mode=importlib --cov=./src --cov-fail-under=80 --no-cov-on-fail --cov-report=term:skip-covered --cov-report=html:build/reports/coverage --cov-branch"
# addopts = "-ra --no-cov"

# Path to tests run by the command pytest. Tests in the folders `end_to_end` and `integration` typically require other applications to be running and are excluded
testpaths = [
    "test"
]

# Environment variables to use in pytests
env = [
    "DEBUG=True"
]

[tool.coverage.run]
# The following files are for development purposes and are not part of the coverage report
omit = []

[tool.ruff]
line-length = 127
target-version = "py310"
exclude = [".git", "__pycache__", "build", "dist"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
]
ignore = []

[tool.ruff.format]
quote-style = "single"
line-ending = "lf"
indent-style = "space"
skip-magic-trailing-comma = false

[tool.mypy]
python_version = "3.10"
plugins = ['pydantic.mypy']
strict = true
ignore_missing_imports = true
exclude = ["scripts"]

[tool.bandit]
exclude_dirs = ["tests"]
